/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

// This key-map file WILL NOT WORK FOR YOU, you will need to modify it. I really do not recommend adapting to it.
// This key-map file is set-up to be the split space layout.
// I strongly urge you to customise your firmware to suit your usage.
// Please feel free to join the ZMK server at https://discord.gg/TdRMQaTYdF for help.

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {

behaviors {

      macros {
         roundbkt: round_brackets {
            label= "round_brackets";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LPAR &kp RPAR>;
         };
         
         
         squarebkt: square_brackets {
            label= "square_brackets";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LBKT &kp RBKT>;
         };
         
         
         curlbkt: curl_brackets {
            label= "curl_brackets";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LBRC &kp RBRC>;
         };
        
         apostrophe: apostrophe {
            label= "apostrophe";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp DQT &kp DQT>;
         };
      };
    
      hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping_term_ms = <150>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
    
      te: tab_enter {
        compatible = "zmk,behavior-hold-tap";
        label = "TAB_ENTER";
        #binding-cells = <2>;
        tapping_term_ms = <50>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
     
    td_mt_enter_tab_f2_f4: tap_dance_mod_tap_tab_esc {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_MOD_TAP_enter_tab_f2_f4";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&te TAB ENTER>, <&kp F2>, <&kp F4>;
        };

    combos {
    compatible = "zmk,combos";
    combo_layer3 {
            timeout-ms = <50>;
            key-positions = <32 33>;
            bindings = <&mo 3>;
       };
    combo_layer4 {
            timeout-ms = <50>;
            key-positions = <0 9 32 33>;
            bindings = <&tog 4>;
       };
    combo_layer1 {
            timeout-ms = <50>;
            key-positions = <4 5 32 33>;
            bindings = <&tog 0>;
       };

    };
};
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | Q      | W      | E       | R       | T          | Y | U                   | I       | O      | P      |
// | A/LGUI | S/LALT | D/LCTRL | F       | G          | H | J                   | K/RCTRL | L/RALT | '/RGUI |
// | Z      | X      | C       | V       | B          | N | M                   | ,       | .      | /      |
//          | ESC    | TAB/LT2 | SPC/LT1 | BSPC/RSHFT | ; | ENT/TAB/F2(2)/F4(3) |
                        bindings = <
   &kp Q      &kp W      &kp E       &kp R       &kp T       &kp Y          &kp U        &kp I       &kp O      &kp P
   &hm LGUI A &hm LALT S &hm LCTRL D &hm LSHFT F &kp G       &kp H          &hm RSHFT J  &hm RCTRL K &hm LALT L &hm RGUI SQT
   &kp Z      &kp X      &kp C       &kp V       &kp B       &lt 2 N        &kp M        &kp COMMA   &kp DOT    &kp FSLH
                         &kp ESC     &lt 2 TAB   &lt 1 SPACE &hm RSHFT BSPC &kp DEL      &hm SEMI ENTER
                        >;
                };

                navnum_layer {
// -----------------------------------------------------------------------------------------
// | + | 1 | 2 | 3 | (   | )    | CAPS | UP    | --    | --  |
// | - | 4 | 5 | 6 | =   | --   | LEFT | DOWN  | RIGHT | --  |
// | * | 7 | 8 | 9 | .   | --   | --   | --    | --    | \   |
//         | / | 0 | ENT | BSPC | DEL  | --    |
                        bindings = <
   &kp KP_PLUS     &kp N1  &kp N2        &kp N3    &kp LPAR  &kp RPAR  &kp HOME &kp END  &kp PG_UP &kp PG_DN
   &kp KP_MINUS    &kp N4  &kp N5        &kp N6    &kp N0    &kp EQUAL &kp LEFT &kp DOWN &kp UP    &kp RIGHT
   &kp KP_MULTIPLY &kp N7  &kp N8        &kp N9    &kp DOT   &none     &kp CAPS &none    &none     &kp BSLH
                           &kp KP_DIVIDE &hm F2 F4 &none     &kp BSPC  &kp DEL  &kp ENTER
                        >; 
                };

                sym_layer {
// -----------------------------------------------------------------------------------------
// | () | [] | {}   | `    | ^     | ~    | FN1  | FN2   | FN3  | FN4  |
// | !  | @  | #    | $    | PIPE  | none | FN5  | FN6   | FN7  | FN8  |
// | %  | ^  | &    | \    | _     | none | FN9  | FN10  | FN11 | FN12 |
//           | none | none | none  | none | none | none  |
                        bindings = <
   &roundbkt &squarebkt &curlbkt      &kp GRAVE     &kp CARET      &kp TILDE &kp F1 &kp F2  &kp F3  &kp F4
   &kp EXCL  &kp AT     &kp HASH      &kp DOLLAR    &kp PIPE       &none     &kp F5 &kp F6  &kp F7  &kp F8
   &kp PRCNT &kp CARET  &kp AMPERSAND &kp BACKSLASH &kp UNDERSCORE &none     &kp F9 &kp F10 &kp F11 &kp F12
                        &none         &none         &none          &none     &none  &none
                        >;
                };
                
                btfc_layer {
// -----------------------------------------------------------------------------------------
// | BT1 | BT2 | BT3        | BT4       | BT5      | vol_mute | play/pause | --         | BT_Clear | -- |
// | --  | --  | --         | Previous  | bri_up   | vol_up   | Next       | --         | --       | -- |
// | --  | --  | --         | --        | bri_down | vol_down | --         | --         | --       | -- |
//             | reset      | --        | combo    | combo    | --         | bootloader |
                        bindings = <
   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &kp C_MUTE   &kp K_PP   &none       &bt BT_CLR &none
   &none        &none        &none        &kp C_PREV   &kp C_BRI_UP &kp C_VOL_UP &kp C_NEXT &none       &none      &none
   &none        &none        &none        &none        &kp C_BRI_DN &kp C_VOL_DN &none      &none       &none      &none
                             &sys_reset   &none        &none        &none        &none      &bootloader
                        >;
                };
                
                empty_layer {
// -----------------------------------------------------------------------------------------
// | none | none | none | none | none | none | none | none | none | none |
// | none | none | none | none | none | none | none | none | none | none |
// | none | none | none | none | none | none | none | none | none | none |
//        | none | none | none | none | none | none |
                        bindings = <
   &none &none &none &none &none &none &none &none &none &none
   &none &none &none &none &none &none &none &none &none &none
   &none &none &none &none &none &none &none &none &none &none
               &none &none &none &none &none &none
                        >;
                };


        };
};
